language: cpp
compiler:
  - gcc
  - clang
before_install:
  - sudo apt-get update -qq
  - sudo apt-get install -qq libsdl1.2-dev libsdl-image1.2-dev libsdl-mixer1.2-dev libsdl-ttf2.0-dev cppcheck

env:
  global:
    # Move the command from your script: section here
    - STANDARD_BUILD_COMMAND="cmake . && make"

    # -- BEGIN Coverity Scan ENV

    # ---- BEGIN Project-specific configuration

    - PROJECT_NAME="aceofspades/flare-engine"
    - OWNER_EMAIL="nobody@example.com"

    # Regular expression selects on which branches to run analysis
    # Be aware of quotas. Do not run on every branch/commit
    - COVERITY_SCAN_BRANCH_PATTERN="coverity_scan"

    # Optionally execute a command immediately before cov-build, i.e.
    #   pre-configuration required for the COVERITY_SCAN_BUILD_COMMAND
    - COVERITY_SCAN_BUILD_COMMAND_PREPEND="cmake ."

    # Insert the cov-build build commmand here
    - COVERITY_SCAN_BUILD_COMMAND="make -j2"

    # COVERITY_SCAN_TOKEN via "travis encrypt" using the repo's public key
    - secure: "H63P4YUW06rJCE+baggJpyx+thVj8t5TTEjgl3bbHP6X7k9CB3SC6D4gJKstUrZ+VI+Xf/as15Fxy+9ba+jrA6c+P8W6UCuOlFAdZWfjghoUpxNRoBdX37pYTXR9rZbbkKdQTTeIArXbTRuw2etBv4PlD1YIMCLdGUqKAzqIk7A="

    # ---- END Project-specific configuration

    #- COVERITY_SCAN_BUILD_URL="http://scan.coverity.com/scripts/travisci_build_coverity_scan.sh"
    - COVERITY_SCAN_BUILD_URL="https://gist.github.com/aceofspades/4bd0dd25f2cbfde5093c/raw"
    - COVERITY_SCAN_BUILD="curl -s $COVERITY_SCAN_BUILD_URL | bash"

    # -- END Coverity Scan ENV

matrix:
  fast_finish: true
  allow_failures:
    - env: COVERITY_SCAN=1
  include:
    - compiler: gcc
      env: COVERITY_SCAN=1

script:
  # Move your original script to STANDARD_BUILD_COMMAND
  - if [ "${COVERITY_SCAN}" = '1' ]; then eval "$COVERITY_SCAN_BUILD"; else eval "$STANDARD_BUILD_COMMAND"; fi

after_script: cppcheck --verbose --enable=all --std=posix --std=c++11 --quiet `git ls-files src/\*.cpp`
# notifications:
#   irc:
#     channels:
#       - "irc.freenode.org#flarerpg"
#     on_success: always
#     on_failure: always
#     use_notice: true
#     skip_join: true
#     template:
#       - "%{repository} (%{commit}) : %{message} %{build_url}"
